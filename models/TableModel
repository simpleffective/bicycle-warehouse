
const fs = require('fs')
const path = require('path')
const { getFormattedDate } = require(path.join(process.env.ROOT, 'util.js'))
const data_path = '/demo-data/'

async function getTableData() {
  try {
    const res= '[' + (await fs.promises.readFile(path.join(__dirname , data_path ,'demo-live.json'), 'utf8')).slice(0,-1) + ']';
    console.log(res);
    return res;
  } catch (error) {
    console.error('error reading file (DB)')
  }
}

async function createEntry(entry) {
  const formattedEntry = parseEntry(entry)
  await saveDataToFile(path.join(__dirname, data_path, 'demo-live.json'), JSON.stringify(formattedEntry))
  return formattedEntry
}

async function saveDataToFile(filename, data) {
  try {
    const fileExists = await fs.promises.access(filename, fs.constants.F_OK)
      .then(() => true)
      .catch(() => false);

    if (!fileExists) {
      await fs.promises.writeFile(filename, '', 'utf8');
    }
    await fs.promises.appendFile(filename, data, 'utf8');
    await fs.promises.appendFile(filename, ',', 'utf8');

  } catch (error) {
    console.error('Error:', error);
  }
}

function parseEntry(entry) {
  return {
    "visual": {
    "img_filename": entry.img_filename,
    "textId": entry.textId,
    },
    "status": 'maintained', 
    "person": entry.person,
    "email": `${entry.email.split('@')[0]}&#8203@${entry.email.split('@')[1]}`,
    "takenDate": getFormattedDate(),
    "maintainedDate":"&#8212"
  }
}

module.exports.getTableData = getTableData
module.exports.createEntry = createEntry